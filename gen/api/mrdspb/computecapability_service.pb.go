// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: computecapability_service.proto

package mrdspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to create a new ComputeCapability.
type CreateComputeCapabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type  string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Score uint32 `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *CreateComputeCapabilityRequest) Reset() {
	*x = CreateComputeCapabilityRequest{}
	mi := &file_computecapability_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateComputeCapabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateComputeCapabilityRequest) ProtoMessage() {}

func (x *CreateComputeCapabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_computecapability_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateComputeCapabilityRequest.ProtoReflect.Descriptor instead.
func (*CreateComputeCapabilityRequest) Descriptor() ([]byte, []int) {
	return file_computecapability_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateComputeCapabilityRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateComputeCapabilityRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateComputeCapabilityRequest) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

// Response after creating a new ComputeCapability.
type CreateComputeCapabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The newly created ComputeCapability record.
	Record *ComputeCapability `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *CreateComputeCapabilityResponse) Reset() {
	*x = CreateComputeCapabilityResponse{}
	mi := &file_computecapability_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateComputeCapabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateComputeCapabilityResponse) ProtoMessage() {}

func (x *CreateComputeCapabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_computecapability_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateComputeCapabilityResponse.ProtoReflect.Descriptor instead.
func (*CreateComputeCapabilityResponse) Descriptor() ([]byte, []int) {
	return file_computecapability_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateComputeCapabilityResponse) GetRecord() *ComputeCapability {
	if x != nil {
		return x.Record
	}
	return nil
}

// Request to update the state and message of a ComputeCapability.
type UpdateComputeCapabilityStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The metadata of the ComputeCapability to update.
	Metadata *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The new state of the ComputeCapability.
	Status *ComputeCapabilityStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateComputeCapabilityStatusRequest) Reset() {
	*x = UpdateComputeCapabilityStatusRequest{}
	mi := &file_computecapability_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateComputeCapabilityStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComputeCapabilityStatusRequest) ProtoMessage() {}

func (x *UpdateComputeCapabilityStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_computecapability_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComputeCapabilityStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateComputeCapabilityStatusRequest) Descriptor() ([]byte, []int) {
	return file_computecapability_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateComputeCapabilityStatusRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateComputeCapabilityStatusRequest) GetStatus() *ComputeCapabilityStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// Response after updating the state of a ComputeCapability.
type UpdateComputeCapabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The updated ComputeCapability record.
	Record *ComputeCapability `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *UpdateComputeCapabilityResponse) Reset() {
	*x = UpdateComputeCapabilityResponse{}
	mi := &file_computecapability_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateComputeCapabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComputeCapabilityResponse) ProtoMessage() {}

func (x *UpdateComputeCapabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_computecapability_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComputeCapabilityResponse.ProtoReflect.Descriptor instead.
func (*UpdateComputeCapabilityResponse) Descriptor() ([]byte, []int) {
	return file_computecapability_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateComputeCapabilityResponse) GetRecord() *ComputeCapability {
	if x != nil {
		return x.Record
	}
	return nil
}

type GetComputeCapabilityByMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *GetComputeCapabilityByMetadataRequest) Reset() {
	*x = GetComputeCapabilityByMetadataRequest{}
	mi := &file_computecapability_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetComputeCapabilityByMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComputeCapabilityByMetadataRequest) ProtoMessage() {}

func (x *GetComputeCapabilityByMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_computecapability_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComputeCapabilityByMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetComputeCapabilityByMetadataRequest) Descriptor() ([]byte, []int) {
	return file_computecapability_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetComputeCapabilityByMetadataRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Request for getting a ComputeCapability by its name.
type GetComputeCapabilityByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the ComputeCapability to get.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetComputeCapabilityByNameRequest) Reset() {
	*x = GetComputeCapabilityByNameRequest{}
	mi := &file_computecapability_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetComputeCapabilityByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComputeCapabilityByNameRequest) ProtoMessage() {}

func (x *GetComputeCapabilityByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_computecapability_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComputeCapabilityByNameRequest.ProtoReflect.Descriptor instead.
func (*GetComputeCapabilityByNameRequest) Descriptor() ([]byte, []int) {
	return file_computecapability_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetComputeCapabilityByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response after fetching a ComputeCapability.
type GetComputeCapabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ComputeCapability record that was fetched.
	Record *ComputeCapability `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *GetComputeCapabilityResponse) Reset() {
	*x = GetComputeCapabilityResponse{}
	mi := &file_computecapability_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetComputeCapabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComputeCapabilityResponse) ProtoMessage() {}

func (x *GetComputeCapabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_computecapability_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComputeCapabilityResponse.ProtoReflect.Descriptor instead.
func (*GetComputeCapabilityResponse) Descriptor() ([]byte, []int) {
	return file_computecapability_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetComputeCapabilityResponse) GetRecord() *ComputeCapability {
	if x != nil {
		return x.Record
	}
	return nil
}

// Request to list ComputeCapabilitys with specific filters.
type ListComputeCapabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IN condition for filtering by IDs.
	IdIn []string `protobuf:"bytes,1,rep,name=id_in,json=idIn,proto3" json:"id_in,omitempty"`
	// IN condition for filtering by Names.
	NameIn []string `protobuf:"bytes,2,rep,name=name_in,json=nameIn,proto3" json:"name_in,omitempty"`
	// Greater than or equal condition for filtering by version.
	VersionGte uint64 `protobuf:"varint,3,opt,name=version_gte,json=versionGte,proto3" json:"version_gte,omitempty"`
	// Less than or equal condition for filtering by version.
	VersionLte uint64 `protobuf:"varint,4,opt,name=version_lte,json=versionLte,proto3" json:"version_lte,omitempty"`
	// Equal condition for filtering by version.
	VersionEq uint64 `protobuf:"varint,5,opt,name=version_eq,json=versionEq,proto3" json:"version_eq,omitempty"`
	// IN condition for filtering by state.
	StateIn []ComputeCapabilityState `protobuf:"varint,6,rep,packed,name=state_in,json=stateIn,proto3,enum=proto.mrds.ledger.computecapability.ComputeCapabilityState" json:"state_in,omitempty"`
	// NOT IN condition for filtering by state.
	StateNotIn []ComputeCapabilityState `protobuf:"varint,7,rep,packed,name=state_not_in,json=stateNotIn,proto3,enum=proto.mrds.ledger.computecapability.ComputeCapabilityState" json:"state_not_in,omitempty"`
	// Whether to include soft-deleted resources in the query.
	IncludeDeleted bool `protobuf:"varint,8,opt,name=include_deleted,json=includeDeleted,proto3" json:"include_deleted,omitempty"`
	// Limit the number of results returned.
	Limit  uint32   `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	TypeIn []string `protobuf:"bytes,10,rep,name=type_in,json=typeIn,proto3" json:"type_in,omitempty"`
}

func (x *ListComputeCapabilityRequest) Reset() {
	*x = ListComputeCapabilityRequest{}
	mi := &file_computecapability_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListComputeCapabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComputeCapabilityRequest) ProtoMessage() {}

func (x *ListComputeCapabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_computecapability_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComputeCapabilityRequest.ProtoReflect.Descriptor instead.
func (*ListComputeCapabilityRequest) Descriptor() ([]byte, []int) {
	return file_computecapability_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListComputeCapabilityRequest) GetIdIn() []string {
	if x != nil {
		return x.IdIn
	}
	return nil
}

func (x *ListComputeCapabilityRequest) GetNameIn() []string {
	if x != nil {
		return x.NameIn
	}
	return nil
}

func (x *ListComputeCapabilityRequest) GetVersionGte() uint64 {
	if x != nil {
		return x.VersionGte
	}
	return 0
}

func (x *ListComputeCapabilityRequest) GetVersionLte() uint64 {
	if x != nil {
		return x.VersionLte
	}
	return 0
}

func (x *ListComputeCapabilityRequest) GetVersionEq() uint64 {
	if x != nil {
		return x.VersionEq
	}
	return 0
}

func (x *ListComputeCapabilityRequest) GetStateIn() []ComputeCapabilityState {
	if x != nil {
		return x.StateIn
	}
	return nil
}

func (x *ListComputeCapabilityRequest) GetStateNotIn() []ComputeCapabilityState {
	if x != nil {
		return x.StateNotIn
	}
	return nil
}

func (x *ListComputeCapabilityRequest) GetIncludeDeleted() bool {
	if x != nil {
		return x.IncludeDeleted
	}
	return false
}

func (x *ListComputeCapabilityRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListComputeCapabilityRequest) GetTypeIn() []string {
	if x != nil {
		return x.TypeIn
	}
	return nil
}

// Response for listing ComputeCapabilitys.
type ListComputeCapabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of ComputeCapability records that match the query.
	Records []*ComputeCapability `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *ListComputeCapabilityResponse) Reset() {
	*x = ListComputeCapabilityResponse{}
	mi := &file_computecapability_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListComputeCapabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComputeCapabilityResponse) ProtoMessage() {}

func (x *ListComputeCapabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_computecapability_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComputeCapabilityResponse.ProtoReflect.Descriptor instead.
func (*ListComputeCapabilityResponse) Descriptor() ([]byte, []int) {
	return file_computecapability_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListComputeCapabilityResponse) GetRecords() []*ComputeCapability {
	if x != nil {
		return x.Records
	}
	return nil
}

// Request to delete a ComputeCapability by its metadata.
type DeleteComputeCapabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The metadata of the ComputeCapability to delete.
	Metadata *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *DeleteComputeCapabilityRequest) Reset() {
	*x = DeleteComputeCapabilityRequest{}
	mi := &file_computecapability_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteComputeCapabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComputeCapabilityRequest) ProtoMessage() {}

func (x *DeleteComputeCapabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_computecapability_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComputeCapabilityRequest.ProtoReflect.Descriptor instead.
func (*DeleteComputeCapabilityRequest) Descriptor() ([]byte, []int) {
	return file_computecapability_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteComputeCapabilityRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Response after deleting a ComputeCapability.
type DeleteComputeCapabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteComputeCapabilityResponse) Reset() {
	*x = DeleteComputeCapabilityResponse{}
	mi := &file_computecapability_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteComputeCapabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComputeCapabilityResponse) ProtoMessage() {}

func (x *DeleteComputeCapabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_computecapability_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComputeCapabilityResponse.ProtoReflect.Descriptor instead.
func (*DeleteComputeCapabilityResponse) Descriptor() ([]byte, []int) {
	return file_computecapability_service_proto_rawDescGZIP(), []int{10}
}

var File_computecapability_service_proto protoreflect.FileDescriptor

var file_computecapability_service_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x5e, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22,
	0x71, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x54, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x71, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x06, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x5e, 0x0a, 0x25, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x42, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d,
	0x72, 0x64, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x21, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64,
	0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x06, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x22, 0xbc, 0x03, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x49, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d,
	0x65, 0x49, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x67,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x47, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x6c, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x45, 0x71, 0x12, 0x56, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d,
	0x72, 0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x12, 0x5d, 0x0a, 0x0c,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x6e, 0x22, 0x71, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72,
	0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x57, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x21, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xad, 0x07, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x93, 0x01, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72,
	0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x9e, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x4a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x96, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x46, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x6d, 0x72, 0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9f, 0x01, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x49, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d,
	0x72, 0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72,
	0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x6d, 0x72, 0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x72, 0x64, 0x73, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x72, 0x64, 0x73, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_computecapability_service_proto_rawDescOnce sync.Once
	file_computecapability_service_proto_rawDescData = file_computecapability_service_proto_rawDesc
)

func file_computecapability_service_proto_rawDescGZIP() []byte {
	file_computecapability_service_proto_rawDescOnce.Do(func() {
		file_computecapability_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_computecapability_service_proto_rawDescData)
	})
	return file_computecapability_service_proto_rawDescData
}

var file_computecapability_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_computecapability_service_proto_goTypes = []any{
	(*CreateComputeCapabilityRequest)(nil),        // 0: proto.mrds.ledger.computecapability.CreateComputeCapabilityRequest
	(*CreateComputeCapabilityResponse)(nil),       // 1: proto.mrds.ledger.computecapability.CreateComputeCapabilityResponse
	(*UpdateComputeCapabilityStatusRequest)(nil),  // 2: proto.mrds.ledger.computecapability.UpdateComputeCapabilityStatusRequest
	(*UpdateComputeCapabilityResponse)(nil),       // 3: proto.mrds.ledger.computecapability.UpdateComputeCapabilityResponse
	(*GetComputeCapabilityByMetadataRequest)(nil), // 4: proto.mrds.ledger.computecapability.GetComputeCapabilityByMetadataRequest
	(*GetComputeCapabilityByNameRequest)(nil),     // 5: proto.mrds.ledger.computecapability.GetComputeCapabilityByNameRequest
	(*GetComputeCapabilityResponse)(nil),          // 6: proto.mrds.ledger.computecapability.GetComputeCapabilityResponse
	(*ListComputeCapabilityRequest)(nil),          // 7: proto.mrds.ledger.computecapability.ListComputeCapabilityRequest
	(*ListComputeCapabilityResponse)(nil),         // 8: proto.mrds.ledger.computecapability.ListComputeCapabilityResponse
	(*DeleteComputeCapabilityRequest)(nil),        // 9: proto.mrds.ledger.computecapability.DeleteComputeCapabilityRequest
	(*DeleteComputeCapabilityResponse)(nil),       // 10: proto.mrds.ledger.computecapability.DeleteComputeCapabilityResponse
	(*ComputeCapability)(nil),                     // 11: proto.mrds.ledger.computecapability.ComputeCapability
	(*Metadata)(nil),                              // 12: proto.mrds.core.Metadata
	(*ComputeCapabilityStatus)(nil),               // 13: proto.mrds.ledger.computecapability.ComputeCapabilityStatus
	(ComputeCapabilityState)(0),                   // 14: proto.mrds.ledger.computecapability.ComputeCapabilityState
}
var file_computecapability_service_proto_depIdxs = []int32{
	11, // 0: proto.mrds.ledger.computecapability.CreateComputeCapabilityResponse.record:type_name -> proto.mrds.ledger.computecapability.ComputeCapability
	12, // 1: proto.mrds.ledger.computecapability.UpdateComputeCapabilityStatusRequest.metadata:type_name -> proto.mrds.core.Metadata
	13, // 2: proto.mrds.ledger.computecapability.UpdateComputeCapabilityStatusRequest.status:type_name -> proto.mrds.ledger.computecapability.ComputeCapabilityStatus
	11, // 3: proto.mrds.ledger.computecapability.UpdateComputeCapabilityResponse.record:type_name -> proto.mrds.ledger.computecapability.ComputeCapability
	12, // 4: proto.mrds.ledger.computecapability.GetComputeCapabilityByMetadataRequest.metadata:type_name -> proto.mrds.core.Metadata
	11, // 5: proto.mrds.ledger.computecapability.GetComputeCapabilityResponse.record:type_name -> proto.mrds.ledger.computecapability.ComputeCapability
	14, // 6: proto.mrds.ledger.computecapability.ListComputeCapabilityRequest.state_in:type_name -> proto.mrds.ledger.computecapability.ComputeCapabilityState
	14, // 7: proto.mrds.ledger.computecapability.ListComputeCapabilityRequest.state_not_in:type_name -> proto.mrds.ledger.computecapability.ComputeCapabilityState
	11, // 8: proto.mrds.ledger.computecapability.ListComputeCapabilityResponse.records:type_name -> proto.mrds.ledger.computecapability.ComputeCapability
	12, // 9: proto.mrds.ledger.computecapability.DeleteComputeCapabilityRequest.metadata:type_name -> proto.mrds.core.Metadata
	0,  // 10: proto.mrds.ledger.computecapability.ComputeCapabilities.Create:input_type -> proto.mrds.ledger.computecapability.CreateComputeCapabilityRequest
	4,  // 11: proto.mrds.ledger.computecapability.ComputeCapabilities.GetByMetadata:input_type -> proto.mrds.ledger.computecapability.GetComputeCapabilityByMetadataRequest
	5,  // 12: proto.mrds.ledger.computecapability.ComputeCapabilities.GetByName:input_type -> proto.mrds.ledger.computecapability.GetComputeCapabilityByNameRequest
	2,  // 13: proto.mrds.ledger.computecapability.ComputeCapabilities.UpdateStatus:input_type -> proto.mrds.ledger.computecapability.UpdateComputeCapabilityStatusRequest
	7,  // 14: proto.mrds.ledger.computecapability.ComputeCapabilities.List:input_type -> proto.mrds.ledger.computecapability.ListComputeCapabilityRequest
	9,  // 15: proto.mrds.ledger.computecapability.ComputeCapabilities.Delete:input_type -> proto.mrds.ledger.computecapability.DeleteComputeCapabilityRequest
	1,  // 16: proto.mrds.ledger.computecapability.ComputeCapabilities.Create:output_type -> proto.mrds.ledger.computecapability.CreateComputeCapabilityResponse
	6,  // 17: proto.mrds.ledger.computecapability.ComputeCapabilities.GetByMetadata:output_type -> proto.mrds.ledger.computecapability.GetComputeCapabilityResponse
	6,  // 18: proto.mrds.ledger.computecapability.ComputeCapabilities.GetByName:output_type -> proto.mrds.ledger.computecapability.GetComputeCapabilityResponse
	3,  // 19: proto.mrds.ledger.computecapability.ComputeCapabilities.UpdateStatus:output_type -> proto.mrds.ledger.computecapability.UpdateComputeCapabilityResponse
	8,  // 20: proto.mrds.ledger.computecapability.ComputeCapabilities.List:output_type -> proto.mrds.ledger.computecapability.ListComputeCapabilityResponse
	10, // 21: proto.mrds.ledger.computecapability.ComputeCapabilities.Delete:output_type -> proto.mrds.ledger.computecapability.DeleteComputeCapabilityResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_computecapability_service_proto_init() }
func file_computecapability_service_proto_init() {
	if File_computecapability_service_proto != nil {
		return
	}
	file_metadata_proto_init()
	file_computecapability_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_computecapability_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_computecapability_service_proto_goTypes,
		DependencyIndexes: file_computecapability_service_proto_depIdxs,
		MessageInfos:      file_computecapability_service_proto_msgTypes,
	}.Build()
	File_computecapability_service_proto = out.File
	file_computecapability_service_proto_rawDesc = nil
	file_computecapability_service_proto_goTypes = nil
	file_computecapability_service_proto_depIdxs = nil
}
